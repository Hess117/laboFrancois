version: '3.8'

services:
  frontend:
    image: nginx
    build: ./frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`s142240.devops-ap.be`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.docker.network=web"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/:/var/www/static/:ro
  
    networks:
      - net

  todo-api-service:
    image: backend
    build: ./backend
    depends_on:
      - db
    environment:
      STORAGE: ${STORAGE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PWD: ${MYSQL_PWD}
      MYSQL_DB: ${MYSQL_DATABASE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`s142240.devops-ap.be`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.docker.network=web"
    networks:
      - net

  db:
    image: mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PWD}
    ports:
      - 3306:3306
    volumes:
      - mydb:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - net
volumes:
  mydb:

networks:
  net:
    external: true
    name: traefik    

